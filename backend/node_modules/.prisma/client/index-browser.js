
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AutorScalarFieldEnum = {
  id_Autor: 'id_Autor',
  Nombre: 'Nombre',
  Email: 'Email',
  Estado: 'Estado'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id_Cliente: 'id_Cliente',
  Cedula: 'Cedula',
  Nombre: 'Nombre',
  Apellido: 'Apellido',
  FechaN: 'FechaN',
  Direccion: 'Direccion',
  Telefono: 'Telefono',
  Estado: 'Estado'
};

exports.Prisma.DetalleFacturaScalarFieldEnum = {
  id_Detalle: 'id_Detalle',
  compra: 'compra',
  cantidad: 'cantidad',
  precio_uni: 'precio_uni',
  id_Compra: 'id_Compra',
  id_Libro: 'id_Libro'
};

exports.Prisma.EditorialScalarFieldEnum = {
  id_Editorial: 'id_Editorial',
  Nombre: 'Nombre',
  Telefono: 'Telefono',
  Email: 'Email',
  SitioWeb: 'SitioWeb'
};

exports.Prisma.FacturaScalarFieldEnum = {
  id_Compra: 'id_Compra',
  fecha_compra: 'fecha_compra',
  total: 'total',
  id_Cliente: 'id_Cliente'
};

exports.Prisma.LibroScalarFieldEnum = {
  id_Libro: 'id_Libro',
  Titulo: 'Titulo',
  Fechap: 'Fechap',
  preciov: 'preciov',
  cantidad: 'cantidad',
  id_Editorial: 'id_Editorial',
  Estado: 'Estado',
  ISBN: 'ISBN'
};

exports.Prisma.Libro_AutorScalarFieldEnum = {
  id_Libro: 'id_Libro',
  id_Autor: 'id_Autor'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AutorOrderByRelevanceFieldEnum = {
  Nombre: 'Nombre',
  Email: 'Email'
};

exports.Prisma.ClienteOrderByRelevanceFieldEnum = {
  Cedula: 'Cedula',
  Nombre: 'Nombre',
  Apellido: 'Apellido',
  Direccion: 'Direccion',
  Telefono: 'Telefono'
};

exports.Prisma.DetalleFacturaOrderByRelevanceFieldEnum = {
  compra: 'compra'
};

exports.Prisma.EditorialOrderByRelevanceFieldEnum = {
  Nombre: 'Nombre',
  Telefono: 'Telefono',
  Email: 'Email',
  SitioWeb: 'SitioWeb'
};

exports.Prisma.LibroOrderByRelevanceFieldEnum = {
  Titulo: 'Titulo',
  ISBN: 'ISBN'
};
exports.Autor_Estado = exports.$Enums.Autor_Estado = {
  ACTIVO: 'ACTIVO',
  INACTIVO: 'INACTIVO'
};

exports.Cliente_Estado = exports.$Enums.Cliente_Estado = {
  ACTIVO: 'ACTIVO',
  INACTIVO: 'INACTIVO'
};

exports.Libro_Estado = exports.$Enums.Libro_Estado = {
  DISPONIBLE: 'DISPONIBLE',
  AGOTADO: 'AGOTADO'
};

exports.Prisma.ModelName = {
  Autor: 'Autor',
  Cliente: 'Cliente',
  DetalleFactura: 'DetalleFactura',
  Editorial: 'Editorial',
  Factura: 'Factura',
  Libro: 'Libro',
  Libro_Autor: 'Libro_Autor'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
